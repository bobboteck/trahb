

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Thu Mar 15 17:06:34 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F4431
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    11                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    12  0000                     
    13                           ; Version 1.45
    14                           ; Generated 16/11/2017 GMT
    15                           ; 
    16                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC18F4431 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     _PDC1L	set	3959
    48  0000                     _PDC1H	set	3958
    49  0000                     _PDC0L	set	3961
    50  0000                     _PDC0H	set	3960
    51  0000                     _FLTCONFIG	set	3948
    52  0000                     _OVDCONS	set	3946
    53  0000                     _OVDCOND	set	3947
    54  0000                     _DTCON	set	3949
    55  0000                     _PWMCON1	set	3950
    56  0000                     _PWMCON0	set	3951
    57  0000                     _PTPERL	set	3963
    58  0000                     _PTPERH	set	3962
    59  0000                     _PTCON1	set	3966
    60  0000                     _PTCON0	set	3967
    61  0000                     _TRISE	set	3990
    62  0000                     _TRISD	set	3989
    63  0000                     _TRISC	set	3988
    64  0000                     _TRISB	set	3987
    65  0000                     _TRISA	set	3986
    66  0000                     _ANSEL1	set	4025
    67  0000                     _ANSEL0	set	4024
    68  0000                     _PORTD	set	3971
    69  0000                     _PORTC	set	3970
    70  0000                     _PORTB	set	3969
    71  0000                     _PORTA	set	3968
    72  0000                     _LATEbits	set	3981
    73                           
    74                           ; #config settings
    75  0000                     
    76                           	psect	cinit
    77  003F44                     __pcinit:
    78                           	opt stack 0
    79  003F44                     start_initialization:
    80                           	opt stack 0
    81  003F44                     __initialization:
    82                           	opt stack 0
    83  003F44                     end_of_initialization:
    84                           	opt stack 0
    85  003F44                     __end_of__initialization:
    86                           	opt stack 0
    87  003F44  0100               	movlb	0
    88  003F46  EFA5  F01F         	goto	_main	;jump to C main() function
    89                           
    90                           	psect	cstackCOMRAM
    91  000001                     __pcstackCOMRAM:
    92                           	opt stack 0
    93  000001                     InitApp@dutycycle:
    94                           	opt stack 0
    95                           
    96                           ; 2 bytes @ 0x0
    97  000001                     	ds	2
    98  000003                     ??_main:
    99                           
   100                           ; 1 bytes @ 0x2
   101  000003                     	ds	2
   102                           
   103 ;;
   104 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   105 ;;
   106 ;; *************** function _main *****************
   107 ;; Defined at:
   108 ;;		line 28 in file "main.c"
   109 ;; Parameters:    Size  Location     Type
   110 ;;		None
   111 ;; Auto vars:     Size  Location     Type
   112 ;;		None
   113 ;; Return value:  Size  Location     Type
   114 ;;                  1    wreg      void 
   115 ;; Registers used:
   116 ;;		wreg, status,2, cstack
   117 ;; Tracked objects:
   118 ;;		On entry : 0/0
   119 ;;		On exit  : 0/0
   120 ;;		Unchanged: 0/0
   121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   122 ;;      Params:         0       0       0       0
   123 ;;      Locals:         0       0       0       0
   124 ;;      Temps:          2       0       0       0
   125 ;;      Totals:         2       0       0       0
   126 ;;Total ram usage:        2 bytes
   127 ;; Hardware stack levels required when called:    1
   128 ;; This function calls:
   129 ;;		_ConfigureOscillator
   130 ;;		_InitApp
   131 ;; This function is called by:
   132 ;;		Startup code after reset
   133 ;; This function uses a non-reentrant model
   134 ;;
   135                           
   136                           	psect	text0
   137  003F4A                     __ptext0:
   138                           	opt stack 0
   139  003F4A                     _main:
   140                           	opt stack 30
   141                           
   142                           ;main.c: 31: ConfigureOscillator();
   143                           
   144                           ;incstack = 0
   145  003F4A  ECA1  F01F         	call	_ConfigureOscillator	;wreg free
   146                           
   147                           ;main.c: 34: InitApp();
   148  003F4E  ECCA  F01F         	call	_InitApp	;wreg free
   149  003F52                     
   150                           ;main.c: 39: {
   151                           ;main.c: 41: LATEbits.LATE2 = 1;
   152  003F52  848D               	bsf	3981,2,c	;volatile
   153                           
   154                           ;main.c: 42: LATEbits.LATE1 = 1;
   155  003F54  828D               	bsf	3981,1,c	;volatile
   156                           
   157                           ;main.c: 43: LATEbits.LATE0 = 1;
   158  003F56  808D               	bsf	3981,0,c	;volatile
   159                           
   160                           ;main.c: 44: _delay((unsigned long)((1000)*(10000000/4000.0)));
   161  003F58  0E0D               	movlw	13
   162  003F5A  6E04               	movwf	(??_main+1)& (0+255),c
   163  003F5C  0EAF               	movlw	175
   164  003F5E  6E03               	movwf	??_main& (0+255),c
   165  003F60  0EB6               	movlw	182
   166  003F62                     u17:
   167  003F62  2EE8               	decfsz	wreg,f,c
   168  003F64  D7FE               	bra	u17
   169  003F66  2E03               	decfsz	??_main& (0+255),f,c
   170  003F68  D7FC               	bra	u17
   171  003F6A  2E04               	decfsz	(??_main+1)& (0+255),f,c
   172  003F6C  D7FA               	bra	u17
   173  003F6E  F000 F000          	nop2	
   174                           
   175                           ;main.c: 45: LATEbits.LATE2 = 0;
   176  003F72  948D               	bcf	3981,2,c	;volatile
   177                           
   178                           ;main.c: 46: LATEbits.LATE1 = 0;
   179  003F74  928D               	bcf	3981,1,c	;volatile
   180                           
   181                           ;main.c: 47: LATEbits.LATE0 = 0;
   182  003F76  908D               	bcf	3981,0,c	;volatile
   183                           
   184                           ;main.c: 48: _delay((unsigned long)((1000)*(10000000/4000.0)));
   185  003F78  0E0D               	movlw	13
   186  003F7A  6E04               	movwf	(??_main+1)& (0+255),c
   187  003F7C  0EAF               	movlw	175
   188  003F7E  6E03               	movwf	??_main& (0+255),c
   189  003F80  0EB6               	movlw	182
   190  003F82                     u27:
   191  003F82  2EE8               	decfsz	wreg,f,c
   192  003F84  D7FE               	bra	u27
   193  003F86  2E03               	decfsz	??_main& (0+255),f,c
   194  003F88  D7FC               	bra	u27
   195  003F8A  2E04               	decfsz	(??_main+1)& (0+255),f,c
   196  003F8C  D7FA               	bra	u27
   197  003F8E  F000 F000          	nop2	
   198  003F92  D7DF               	goto	l13
   199  003F94                     __end_of_main:
   200                           	opt stack 0
   201                           wreg	equ	0xFE8
   202                           
   203 ;; *************** function _InitApp *****************
   204 ;; Defined at:
   205 ;;		line 17 in file "user.c"
   206 ;; Parameters:    Size  Location     Type
   207 ;;		None
   208 ;; Auto vars:     Size  Location     Type
   209 ;;  dutycycle       2    0[COMRAM] unsigned int 
   210 ;; Return value:  Size  Location     Type
   211 ;;                  1    wreg      void 
   212 ;; Registers used:
   213 ;;		wreg, status,2
   214 ;; Tracked objects:
   215 ;;		On entry : 0/0
   216 ;;		On exit  : 0/0
   217 ;;		Unchanged: 0/0
   218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   219 ;;      Params:         0       0       0       0
   220 ;;      Locals:         2       0       0       0
   221 ;;      Temps:          0       0       0       0
   222 ;;      Totals:         2       0       0       0
   223 ;;Total ram usage:        2 bytes
   224 ;; Hardware stack levels used:    1
   225 ;; This function calls:
   226 ;;		Nothing
   227 ;; This function is called by:
   228 ;;		_main
   229 ;; This function uses a non-reentrant model
   230 ;;
   231                           
   232                           	psect	text1
   233  003F94                     __ptext1:
   234                           	opt stack 0
   235  003F94                     _InitApp:
   236                           	opt stack 30
   237                           
   238                           ;user.c: 19: unsigned int dutycycle = 2000;
   239                           
   240                           ;incstack = 0
   241  003F94  0E07               	movlw	7
   242  003F96  6E02               	movwf	InitApp@dutycycle+1,c
   243  003F98  0ED0               	movlw	208
   244  003F9A  6E01               	movwf	InitApp@dutycycle,c
   245                           
   246                           ;user.c: 23: PORTA = 0;
   247  003F9C  0E00               	movlw	0
   248  003F9E  6E80               	movwf	3968,c	;volatile
   249                           
   250                           ;user.c: 24: PORTB = 0;
   251  003FA0  0E00               	movlw	0
   252  003FA2  6E81               	movwf	3969,c	;volatile
   253                           
   254                           ;user.c: 25: PORTC = 0;
   255  003FA4  0E00               	movlw	0
   256  003FA6  6E82               	movwf	3970,c	;volatile
   257                           
   258                           ;user.c: 26: PORTD = 0;
   259  003FA8  0E00               	movlw	0
   260  003FAA  6E83               	movwf	3971,c	;volatile
   261                           
   262                           ;user.c: 27: ANSEL0 = 0b00111111;
   263  003FAC  0E3F               	movlw	63
   264  003FAE  6EB8               	movwf	4024,c	;volatile
   265                           
   266                           ;user.c: 28: ANSEL1 = 0b00000000;
   267  003FB0  0E00               	movlw	0
   268  003FB2  6EB9               	movwf	4025,c	;volatile
   269                           
   270                           ;user.c: 33: TRISA = 0b00111111;
   271  003FB4  0E3F               	movlw	63
   272  003FB6  6E92               	movwf	3986,c	;volatile
   273                           
   274                           ;user.c: 35: TRISB = 0b00000000;
   275  003FB8  0E00               	movlw	0
   276  003FBA  6E93               	movwf	3987,c	;volatile
   277                           
   278                           ;user.c: 38: TRISC = 0b10100000;
   279  003FBC  0EA0               	movlw	160
   280  003FBE  6E94               	movwf	3988,c	;volatile
   281                           
   282                           ;user.c: 40: TRISD = 0b00000000;
   283  003FC0  0E00               	movlw	0
   284  003FC2  6E95               	movwf	3989,c	;volatile
   285                           
   286                           ;user.c: 42: TRISE = 0b11111000;
   287  003FC4  0EF8               	movlw	248
   288  003FC6  6E96               	movwf	3990,c	;volatile
   289                           
   290                           ;user.c: 52: PTCON0 = 0b11110000;
   291  003FC8  0EF0               	movlw	240
   292  003FCA  6E7F               	movwf	3967,c	;volatile
   293                           
   294                           ;user.c: 53: PTCON1 = 0b10000000;
   295  003FCC  0E80               	movlw	128
   296  003FCE  6E7E               	movwf	3966,c	;volatile
   297                           
   298                           ;user.c: 55: PTPERH = 0x01;
   299  003FD0  0E01               	movlw	1
   300  003FD2  6E7A               	movwf	3962,c	;volatile
   301                           
   302                           ;user.c: 56: PTPERL = 0xff;
   303  003FD4  687B               	setf	3963,c	;volatile
   304                           
   305                           ;user.c: 59: PWMCON0 = 0b00110000;
   306  003FD6  0E30               	movlw	48
   307  003FD8  6E6F               	movwf	3951,c	;volatile
   308                           
   309                           ;user.c: 60: PWMCON1 = 0b11110000;
   310  003FDA  0EF0               	movlw	240
   311  003FDC  6E6E               	movwf	3950,c	;volatile
   312                           
   313                           ;user.c: 61: DTCON = 0x00;
   314  003FDE  0E00               	movlw	0
   315  003FE0  6E6D               	movwf	3949,c	;volatile
   316                           
   317                           ;user.c: 63: OVDCOND = 0b00111111;
   318  003FE2  0E3F               	movlw	63
   319  003FE4  6E6B               	movwf	3947,c	;volatile
   320                           
   321                           ;user.c: 64: OVDCONS = 0b00000000;
   322  003FE6  0E00               	movlw	0
   323  003FE8  6E6A               	movwf	3946,c	;volatile
   324                           
   325                           ;user.c: 66: FLTCONFIG = 0x00;
   326  003FEA  0E00               	movlw	0
   327  003FEC  6E6C               	movwf	3948,c	;volatile
   328                           
   329                           ;user.c: 68: PDC0H = dutycycle >> 8;PDC0L = dutycycle;
   330  003FEE  5002               	movf	InitApp@dutycycle+1,w,c
   331  003FF0  6E78               	movwf	3960,c	;volatile
   332  003FF2  C001  FF79         	movff	InitApp@dutycycle,3961	;volatile
   333                           
   334                           ;user.c: 69: PDC1H = dutycycle >> 8;PDC1L = dutycycle;
   335  003FF6  5002               	movf	InitApp@dutycycle+1,w,c
   336  003FF8  6E76               	movwf	3958,c	;volatile
   337  003FFA  C001  FF77         	movff	InitApp@dutycycle,3959	;volatile
   338  003FFE  0012               	return		;funcret
   339  004000                     __end_of_InitApp:
   340                           	opt stack 0
   341                           wreg	equ	0xFE8
   342                           
   343 ;; *************** function _ConfigureOscillator *****************
   344 ;; Defined at:
   345 ;;		line 24 in file "system.c"
   346 ;; Parameters:    Size  Location     Type
   347 ;;		None
   348 ;; Auto vars:     Size  Location     Type
   349 ;;		None
   350 ;; Return value:  Size  Location     Type
   351 ;;                  1    wreg      void 
   352 ;; Registers used:
   353 ;;		None
   354 ;; Tracked objects:
   355 ;;		On entry : 0/0
   356 ;;		On exit  : 0/0
   357 ;;		Unchanged: 0/0
   358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   359 ;;      Params:         0       0       0       0
   360 ;;      Locals:         0       0       0       0
   361 ;;      Temps:          0       0       0       0
   362 ;;      Totals:         0       0       0       0
   363 ;;Total ram usage:        0 bytes
   364 ;; Hardware stack levels used:    1
   365 ;; This function calls:
   366 ;;		Nothing
   367 ;; This function is called by:
   368 ;;		_main
   369 ;; This function uses a non-reentrant model
   370 ;;
   371                           
   372                           	psect	text2
   373  003F42                     __ptext2:
   374                           	opt stack 0
   375  003F42                     _ConfigureOscillator:
   376                           	opt stack 30
   377                           
   378                           ;incstack = 0
   379  003F42  0012               	return		;funcret
   380  003F44                     __end_of_ConfigureOscillator:
   381                           	opt stack 0
   382  0000                     wreg	equ	0xFE8
   383                           wreg	equ	0xFE8
   384                           
   385                           	psect	rparam
   386  0000                     wreg	equ	0xFE8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      4       4
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_InitApp

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0      60
                                              2 COMRAM     2     2      0
                _ConfigureOscillator
                            _InitApp
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              2     2      0      60
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _InitApp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      4       4       1        4.2%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BIGRAM             2FF      0       0      10        0.0%
DATA                 0      0       0      11        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Thu Mar 15 17:06:34 2018

                          l13 3F52                            u17 3F62                            u27 3F82  
                __CFG_CP0$OFF 000000                  __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000  
                __CFG_CP3$OFF 000000                   __CFG_LVP$ON 000000                  __CFG_CPB$OFF 000000  
                __CFG_CPD$OFF 000000                           wreg 000FE8                  __CFG_IESO$ON 000000  
               __CFG_FCMEN$ON 000000                          _main 3F4A                 __CFG_BOREN$ON 000000  
                        start 0000                 __CFG_MCLRE$ON 000000                  ___param_bank 000000  
             __end_of_InitApp 4000                         ?_main 0001                         _PDC0H 000F78  
                       _PDC1H 000F76                         _DTCON 000F6D                         _PDC0L 000F79  
                       _PDC1L 000F77                         _PORTA 000F80                         _PORTB 000F81  
                       _PORTC 000F82                         _PORTD 000F83                         _TRISA 000F92  
                       _TRISB 000F93                         _TRISC 000F94                         _TRISD 000F95  
                       _TRISE 000F96           _ConfigureOscillator 3F42                 __CFG_WRT0$OFF 000000  
               __CFG_WRT1$OFF 000000                 __CFG_WRT2$OFF 000000                 __CFG_WRT3$OFF 000000  
              __CFG_EBTR0$OFF 000000                __CFG_EBTR1$OFF 000000                __CFG_EBTR2$OFF 000000  
              __CFG_EBTR3$OFF 000000                 __CFG_WRTB$OFF 000000                 __CFG_WRTC$OFF 000000  
               __CFG_WRTD$OFF 000000                __CFG_EBTRB$OFF 000000          ?_ConfigureOscillator 0001  
             __initialization 3F44                __CFG_HPOL$HIGH 000000                  __end_of_main 3F94  
              __CFG_OSC$HSPLL 000000                __CFG_LPOL$HIGH 000000                        ??_main 0003  
               __activetblptr 000000                        _ANSEL0 000FB8                        _ANSEL1 000FB9  
              __CFG_WDTEN$OFF 000000                        _PTCON0 000F7F                        _PTCON1 000F7E  
              __CFG_WINEN$OFF 000000                        _PTPERH 000F7A                        _PTPERL 000F7B  
                   ??_InitApp 0001         ??_ConfigureOscillator 0001                __CFG_SSPMX$RC7 000000  
              __CFG_STVREN$ON 000000                    __accesstop 0060       __end_of__initialization 3F44  
             __CFG_FLTAMX$RC1 000000                 ___rparam_used 000001               __CFG_T1OSCMX$ON 000000  
              __pcstackCOMRAM 0001               __CFG_WDPS$32768 000000               __CFG_PWM4MX$RB5 000000  
            InitApp@dutycycle 0001                       _OVDCOND 000F6B                       _OVDCONS 000F6A  
                     _PWMCON0 000F6F                       _PWMCON1 000F6E               __CFG_PWMPIN$OFF 000000  
                     _InitApp 3F94               __CFG_PWRTEN$OFF 000000                       __Hparam 0000  
                     __Lparam 0000                       __pcinit 3F44                       __ramtop 0300  
                     __ptext0 3F4A                       __ptext1 3F94                       __ptext2 3F42  
                   _FLTCONFIG 000F6C          end_of_initialization 3F44   __end_of_ConfigureOscillator 3F44  
            __CFG_EXCLKMX$RC3 000000           start_initialization 3F44                      ?_InitApp 0001  
                    _LATEbits 000F8D              __size_of_InitApp 006C                      __Hrparam 0000  
                    __Lrparam 0000                 __size_of_main 004A  __size_of_ConfigureOscillator 0002  
